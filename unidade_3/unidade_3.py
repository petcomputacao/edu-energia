# -*- coding: utf-8 -*-
"""unidade_3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1e3EBZ5mREmAHOAbp8TggHGFMPK5VrTM8

# üìò M√≥dulo 1 ‚Äì Introdu√ß√£o √† An√°lise Descritiva de Dados (Parte 1)

Este roteiro √© voltado para a compreens√£o inicial de como analisar dados de energia el√©trica, com exemplos utilizando dados do Smart Campus UFCG.
---

## üîå 1. Coleta e Armazenamento de Dados

O primeiro passo da an√°lise de dados √© entender **de onde os dados v√™m** e **como s√£o organizados**.

üßæ Neste curso, usaremos dados reais extra√≠dos de sensores do campus, armazenados em planilhas. Nesse contexto, √© necess√°rio salientar que os dados utilizados nos exemplos s√£o filtrados da planilha, ou seja, todos os gr√°ficos vistos durante este roteiro s√£o resultados da filtragem dos dados brutos de energia, advindos do Smart Campus UFCG.

üìå Os dados que vamos utilizar est√£o organizados da seguinte forma:

- **Data e Hora**
- **Consumo de Energia (kWh)**
- **Tens√£o (V)**
- **Corrente (A)**
- **Local do Medidor**

üíª Iremos usar os t√≥picos acima para dar exemplos e demonstrar de forma mais visual como compreender os conceitos apresentados.

---

## üß© 2. Tipos de Vari√°veis

Vamos entender os **tipos de vari√°veis** presentes no nosso conjunto de dados.

- **Qualitativas Nominais**: categorizam sem ordem (ex: Local do Medidor, cor de olhos, estado civil, sexo)



Melhor indica√ß√£o de uso: para classificar ou identificar grupos e √∫til em gr√°fico de barras ou tabelas de frequ√™ncia

No exemplo abaixo d√° para ver um gr√°fico de barras com a classifica√ß√£o de vari√°vel qualitativa nominal apenas pela descri√ß√£o dos nomes dos Medidores.
"""

import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns

# Dados simulados
medidores = ['Medidor LSD'] * 20 + ['Medidor CAA'] * 12 + ['Medidor Reitoria'] * 8
df = pd.DataFrame({'Nome': medidores})

# Gr√°fico com r√≥tulo rotacionado
sns.set(style="whitegrid")
plt.figure(figsize=(8, 5))
df['Nome'].value_counts().plot(kind='bar', color='lightgreen', rot =0)
plt.title('Distribui√ß√£o de Registros por Medidor (Qualitativa Nominal)')
plt.xlabel('Nome do Medidor')
plt.ylabel('Quantidade de Registros')
plt.tight_layout()
plt.show()

"""- **Qualitativas Ordinais**: categorizam com ordem ou grau(ex: N√≠vel de Tens√£o: "Alta", "M√©dia", "Baixa", grau de satisfa√ß√£o: bom, regular, √≥timo)

Melhores indica√ß√µes de uso: quando √© importante comparar posi√ß√µes ou n√≠veis. Tamb√©m √© muito utilizada em escalas de avalia√ß√£o e rankeamento.
No exemplo abaixo podemos ver um gr√°fico parecido com o qualitativo nominal, por√©m, na sua classifica√ß√£o existe uma ordena√ß√£o, ou melhor, existe um grau de satisfa√ß√£o entre as declara√ß√µes das colunas.
"""

# Fatores de pot√™ncia simulados
fp_valores = [0.88, 0.91, 0.94, 0.96, 0.98, 0.87, 0.89, 0.93, 0.95, 0.97]

# Classificar
def classificar_fp(fp):
    if fp < 0.90:
        return "Ruim"
    elif fp < 0.95:
        return "Regular"
    else:
        return "Bom"

df_fp = pd.DataFrame({'FP': fp_valores})
df_fp['Classifica√ß√£o'] = df_fp['FP'].apply(classificar_fp)

# Gr√°fico
ordem = ['Ruim', 'Regular', 'Bom']
plt.figure(figsize=(8, 5))
df_fp['Classifica√ß√£o'].value_counts().reindex(ordem).plot(kind='bar', color='lightgreen', rot = 0)
plt.title('Classifica√ß√£o do Fator de Pot√™ncia (Qualitativa Ordinal)')
plt.xlabel('Classifica√ß√£o')
plt.ylabel('Frequ√™ncia')
plt.tight_layout()
plt.show()

"""- **Quantitativas Discretas**: n√∫meros cont√°veis e inteiros (ex: quantidade de eventos, n√∫mero de filhos, n√∫mero de atendimentos)

Usos mais comuns: quando o dado representa contagens, sendo muito comum em dados administrativos. Al√©m disso, os gr√°ficos mais indicados para esse tipo de dado s√£o gr√°ficos de colunas.
No gr√°fico abaixo √© simples de identificar a compara√ß√£o entre qual hora do dia obteve a maior quantidade de registros.
"""

# Dados fict√≠cios de hor√°rios de leitura
horas = [0]*3 + [1]*5 + [2]*7 + [3]*6 + [4]*4 + [5]*3 + [6]*2
df_horas = pd.DataFrame({'Hora': horas})

# Gr√°fico
plt.figure(figsize=(8, 5))
df_horas['Hora'].value_counts().sort_index().plot(kind='bar', color='salmon', rot = 0)
plt.title('N√∫mero de Registros por Hora (Quantitativa Discreta)')
plt.xlabel('Hora do Dia')
plt.ylabel('Quantidade de Registros')
plt.xticks(rotation=0)
plt.tight_layout()
plt.show()

"""- **Quantitativas Cont√≠nuas**: valores em uma escala cont√≠nua, ou seja, valores medidos que podem assumir qualquer valor dentro de um intervalo (ex: consumo em kWh, peso, altura, temperatura)

Uso mais comum: em an√°lises estat√≠sticas detalhadas como m√©dia e desvio padr√£o, em gr√°ficos como histograma e distribui√ß√µes.
No gr√°fico abaixo temos a jun√ß√£o de um histograma (barras verticais que mostram a frequ√™ncia do consumo) e uma distribui√ß√£o de densidade (linha suave sobre o histograma). Com isso, a hist√≥ria do gr√°fico √© a estimativa cont√≠nua da densidade de probabilidade dos dados, dessa forma a linha indica onde os dados est√£o mais concentrados.
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Exemplo simples: consumo de energia em kWh
consumo = [12.3, 13.5, 11.2, 14.8, 12.9, 13.3, 11.9, 14.2, 13.0, 12.5]
df = pd.DataFrame({'Consumo (kWh)': consumo})

# Gr√°fico
plt.figure(figsize=(8, 5))
sns.histplot(df['Consumo (kWh)'], bins=5, kde=True, color='salmon')
plt.title('Distribui√ß√£o do Consumo de Energia (Quantitativa Cont√≠nua)')
plt.xlabel('Consumo (kWh)')
plt.ylabel('Frequ√™ncia')
plt.tight_layout()
plt.show()

"""## üîç 3. Classificando as vari√°veis de Energia

identificando as vari√°veis do nosso dataset:

| Coluna             | Tipo de Vari√°vel                  |
|--------------------|-----------------------------------|
| Data e Hora        | Temporal                          |
| Local do Medidor   | Qualitativa Nominal               |
| Tens√£o (V)         | Quantitativa Cont√≠nua             |
| Corrente (A)       | Quantitativa Cont√≠nua             |
| Consumo (kWh)      | Quantitativa Cont√≠nua             |

## üéØ 4. Vari√°veis Qualitativas

Vamos observar a distribui√ß√£o dos locais onde os medidores est√£o instalados:
"""

df['Local'].value_counts().plot(kind='bar', title='Distribui√ß√£o dos Medidores por Local')

"""##üßÆ 5. Vari√°veis Quantitativas
a) Discretas
Vari√°veis discretas s√£o contagens. Exemplo: n√∫mero de registros por dia.
"""

df['Data'] = pd.to_datetime(df['Data e Hora']).dt.date
df.groupby('Data').size().plot(kind='line', title='N√∫mero de Registros por Dia')

"""b) Cont√≠nuas
Vamos analisar o consumo de energia:
"""

df['Consumo (kWh)'].plot(kind='hist', bins=30, title='Distribui√ß√£o do Consumo (kWh)')

"""##üìä 6. Distribui√ß√£o de Frequ√™ncia
Vamos estudar a distribui√ß√£o de consumo:
"""

consumo_freq = pd.cut(df['Consumo (kWh)'], bins=5).value_counts().sort_index()
consumo_freq.plot(kind='bar', title='Distribui√ß√£o de Frequ√™ncia - Consumo (kWh)')